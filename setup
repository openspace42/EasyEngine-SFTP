#!/bin/bash

short_name="ee-sftp"
author_name="openspace42"

# Set bash environment error management

set -e
set -u

# Check root

if [[ $EUID -ne 0 ]]
then
        echo "${r}${b}This script must be run as root${x}"
        echo
        echo "${b}Exiting...${x}"
        echo
        exit 1
fi

################################################################################

echo

now="$(date +"%Y-%m-%d_%H-%M-%S")"
source_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

### Define latest version
export latest_vers="$(grep 'refs/tags/' $source_dir/.git/packed-refs | tail -1 | awk '{print $2}' | sed "s|refs/tags/v||g")"

base_dir=/root/$author_name
install_dir=$base_dir/$short_name
conf_dir=$install_dir/conf

if [ -f $conf_dir/beta ]
then
        echo "- * - !!! - * - !!! - * - !!! - * - !!! - * - !!! - * - !!! - * - !!! - * - !!! -"
	echo
        echo "Installing bleeding-edge version of $short_name up to latest git commit."
        echo
        echo "[delete the | $conf_dir/beta | file to cancel your opt-in to bleeding-edge versions]"
        echo
        echo "- * - !!! - * - !!! - * - !!! - * - !!! - * - !!! - * - !!! - * - !!! - * - !!! -"
        ( cd $source_dir && bash ./install --return-check )
else
        echo "Installing $short_name v$latest_vers"
        echo
	( cd $source_dir && git checkout tags/v$latest_vers && bash ./install --return-check )
fi

echo "Exiting installer"
echo
